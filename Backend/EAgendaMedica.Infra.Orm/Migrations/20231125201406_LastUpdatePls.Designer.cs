// <auto-generated />
using System;
using EAgendaMedica.Infra.Orm.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EAgendaMedica.Infra.Orm.Migrations
{
    [DbContext(typeof(EAgendaDbContext))]
    [Migration("20231125201406_LastUpdatePls")]
    partial class LastUpdatePls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AtividadeMedico", b =>
                {
                    b.Property<Guid>("AtividadesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AtividadesId", "MedicosId");

                    b.HasIndex("MedicosId");

                    b.ToTable("TBMedico_TBAtividade", (string)null);
                });

            modelBuilder.Entity("EAgendaMedica.Dominio.ModuloAtividade.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("TipoAtividade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TBAtividade", (string)null);
                });

            modelBuilder.Entity("EAgendaMedica.Dominio.ModuloMedico.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TBMedico", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7934e7e-920d-4405-88d5-9a984bc12455"),
                            Crm = "00000-AA",
                            Nome = "Dr. Teste I"
                        },
                        new
                        {
                            Id = new Guid("8ca5d08e-f95b-4139-a837-eff0decd6653"),
                            Crm = "09876-ZZ",
                            Nome = "Dr. Teste II"
                        },
                        new
                        {
                            Id = new Guid("d2956088-b09c-4970-9d24-bae1a9ecb9f6"),
                            Crm = "12345-AZ",
                            Nome = "Dr. Teste III"
                        });
                });

            modelBuilder.Entity("AtividadeMedico", b =>
                {
                    b.HasOne("EAgendaMedica.Dominio.ModuloAtividade.Atividade", null)
                        .WithMany()
                        .HasForeignKey("AtividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAgendaMedica.Dominio.ModuloMedico.Medico", null)
                        .WithMany()
                        .HasForeignKey("MedicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
